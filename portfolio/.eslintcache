[{"D:\\GitRepo\\portfolio\\portfolio\\src\\index.js":"1","D:\\GitRepo\\portfolio\\portfolio\\src\\App.js":"2","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Home.js":"3","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\About.js":"4","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Portfolio.js":"5","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Contact.js":"6","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\logo.js":"7","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Carousel.js":"8","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\gitLogo.js":"9","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Contact form.js":"10","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\lines.js":"11"},{"size":209,"mtime":1603390168968,"results":"12","hashOfConfig":"13"},{"size":562,"mtime":1607974222793,"results":"14","hashOfConfig":"13"},{"size":4427,"mtime":1607974191771,"results":"15","hashOfConfig":"13"},{"size":6660,"mtime":1607888134352,"results":"16","hashOfConfig":"13"},{"size":1504,"mtime":1607785168934,"results":"17","hashOfConfig":"13"},{"size":2696,"mtime":1607868799218,"results":"18","hashOfConfig":"13"},{"size":14818,"mtime":1606659169651,"results":"19","hashOfConfig":"13"},{"size":4216,"mtime":1607785124327,"results":"20","hashOfConfig":"13"},{"size":1593,"mtime":1604605781831,"results":"21","hashOfConfig":"13"},{"size":1551,"mtime":1607785133045,"results":"22","hashOfConfig":"13"},{"size":896795,"mtime":1604776668285,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1azcodp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitRepo\\portfolio\\portfolio\\src\\index.js",[],["49","50"],"D:\\GitRepo\\portfolio\\portfolio\\src\\App.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Home.js",["51"],"import React, {Component} from 'react';\r\nimport styles from \"../scss/home.module.scss\";\r\nimport Logo from \"../components/logo.js\";\r\nimport portrait from \"../img/portrait.png\"\r\nimport Particles from \"react-tsparticles\";\r\nimport particlesParam from \"./animation/particles.json\";\r\nimport {HashLink} from \"react-router-hash-link\";\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <section className={styles.section} id=\"home\">\r\n                <nav className={styles.nav}>\r\n                    <div className=\"menuToggle\">\r\n                        <input type=\"checkbox\"/>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <ul className=\"menu\">\r\n                            <li><HashLink smooth className={styles.navLink} to=\"#about\">about</HashLink></li>\r\n                            <li><HashLink smooth className={styles.navLink} to=\"#portfolio\">portfolio</HashLink></li>\r\n                            <li><HashLink smooth className={styles.navLink} to=\"#contact\">contact</HashLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className={styles.logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <div className={styles.contentContainer}>\r\n                    <div className={styles.textContainer}>\r\n                        <div className={styles.textContainerContent}>\r\n                            <div className={styles.text}>\r\n                                <span>&#60;home&#62;</span>\r\n                                <span>Hello,</span>\r\n                                <span>I’m Andrew,</span>\r\n                                <span>front-end developer.</span>\r\n                                <p>dynamicznie rozwijający się młody specjalista, którego celem jest dołaczenie do\r\n                                    zgrabnego\r\n                                    zespołu aby opanować nowe technologie i rozwijać umiętmości pod czas wspólnej\r\n                                    realizacji\r\n                                    projektów.</p>\r\n                            </div>\r\n                            <div className={styles.buttons}>\r\n                                <button className={styles.getCv}><a download href=\"../img/3.png\">pobierz cv</a></button>\r\n                                <button className={styles.github}><a download href=\"../img/3.png\">moje prace</a>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.imageContainer}>\r\n                        <div className={styles.imageContainerContent}>\r\n                            <div className={styles.decorationContainer}>\r\n                                <span className={`${styles.decoration} ${styles.positionHtml}`}>&#60;html&#62;</span>\r\n                                <span className={`${styles.decoration} ${styles.positionReact}`}>&#60;react&#62;</span>\r\n                                <span\r\n                                    className={`${styles.decoration} ${styles.positionScript}`}>&#60;script&#62;</span>\r\n                                <span\r\n                                    className={`${styles.decoration} ${styles.positionWebpack}`}>&#60;webpack&#62;</span>\r\n                                <img className={styles.portrait} src={portrait} alt=\"Portrait photo\"/>\r\n                                <div className={styles.decorFront}>\r\n                                    <span>front</span>\r\n                                    <span>front</span>\r\n                                    <span>front</span>\r\n                                </div>\r\n                                <div className={styles.decorEnd}>\r\n                                    <span>end</span>\r\n                                    <span>end</span>\r\n                                    <span>end</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.abstract}>\r\n                                <Particles params={particlesParam}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\About.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Portfolio.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Contact.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\logo.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Carousel.js",["52"],"import React, {Component} from \"react\";\r\nimport one from \"../img/project1.jpg\";\r\nimport two from \"../img/project2.jpg\";\r\nimport three from \"../img/3.png\";\r\nimport styles from \"../scss/portfolio.module.scss\";\r\n\r\nclass Carousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextSlide = this.nextSlide.bind(this);\r\n        this.prevSlide = this.prevSlide.bind(this);\r\n        this.handleTouchStart = this.handleTouchStart.bind(this);\r\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n\r\n        this.state = {\r\n            currentImageIndex: 0,\r\n            images: [\r\n                {image: one, index: 0},\r\n                {image: two, index: 1},\r\n                {image: three, index: 2},\r\n            ],\r\n            x: 0,\r\n            touchStartLocation: {\r\n                x: null,\r\n            }\r\n        };\r\n    }\r\n\r\n    //Arrow slide events\r\n    prevSlide() {\r\n        const resetIndex = this.state.currentImageIndex === 0;\r\n        resetIndex ? this.setState({\r\n                currentImageIndex: 0,\r\n            })\r\n            : this.setState({\r\n                currentImageIndex: this.state.currentImageIndex - 1,\r\n            });\r\n\r\n    }\r\n\r\n    nextSlide() {\r\n        let counter = this.state.currentImageIndex;\r\n        let newIndex = counter + 1;\r\n        if (counter === 2) {\r\n            this.setState({\r\n                currentImageIndex: 0,\r\n            })\r\n        } else (this.setState({\r\n                currentImageIndex: newIndex,\r\n            })\r\n        )\r\n    }\r\n\r\n    //Swipe events\r\n    handleTouchStart(e) {\r\n        //touch start events give a list of touches for multiple fingers.  0 would be the first finfer\r\n        const firstTouchEvent = e.touches[0];\r\n        const location = {\r\n            x: firstTouchEvent.clientX, //get where the touch happened\r\n        };\r\n        this.setState({\r\n            touchStartLocation: location\r\n        });\r\n    }\r\n\r\n    handleTouchEnd(e) {\r\n        //on touch end, makes change to changedTouches\r\n        const firstTouchEvent = e.changedTouches[0];\r\n        const location = {\r\n            x: firstTouchEvent.clientX, //get the location of the end of the touch\r\n        };\r\n        const differences = {\r\n            x: this.state.touchStartLocation.x - location.x, //find the difference from the start to the end touch\r\n        };\r\n        const newPosition = {\r\n            x: this.state.x + -1 * differences.x * 0.05, //.05 to reduce the distance of the touch.  purely for demonstration ease\r\n        };\r\n        location.x > this.state.touchStartLocation.x ? this.prevSlide() : this.nextSlide();\r\n        console.log(location);\r\n        console.log();\r\n    }\r\n\r\n    render() {\r\n\r\n        const images = this.state.images;\r\n        let index = this.state.currentImageIndex;\r\n\r\n        return (\r\n            <div className={styles.carouselContainer}>\r\n                <div className={styles.arrowContainer}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" stroke-width=\"7\" stroke=\"#ffcc00\"\r\n                         fill=\"none\" onClick={this.prevSlide} className={styles.arrowPrev}>\r\n                        <polyline points=\"45.15 57.47 19.88 30.84 45.15 6.58\"/>\r\n                    </svg>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" stroke-width=\"7\" stroke=\"#ffcc00\"\r\n                         fill=\"none\" onClick={this.nextSlide} className={styles.arrowNext}>\r\n                        <polyline points=\"18.86 57.47 44.12 30.84 18.86 6.58\"/>\r\n                    </svg>\r\n                </div>\r\n\r\n\r\n                <div className={styles.imgContainer}>\r\n                    <div className={styles.wrapper}\r\n                         onTouchStart={this.handleTouchStart}\r\n                         onTouchEnd={this.handleTouchEnd}\r\n\r\n                         style={{\"transform\": `translateX(-${index * (100 / images.length)}%)`}}>\r\n                        {images.map((image, index) =>\r\n                            <img key={index.index} src={image.image} alt=\"\"/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Carousel;","D:\\GitRepo\\portfolio\\portfolio\\src\\components\\gitLogo.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\Contact form.js",[],"D:\\GitRepo\\portfolio\\portfolio\\src\\components\\lines.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":60,"column":33,"nodeType":"59","endLine":60,"endColumn":103},{"ruleId":"60","severity":1,"message":"61","line":75,"column":15,"nodeType":"62","messageId":"63","endLine":75,"endColumn":26},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'newPosition' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]